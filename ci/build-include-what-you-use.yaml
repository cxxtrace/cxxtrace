trigger: none

jobs:
- job: macos_clang_8_debug
  displayName: 'Build include-what-you-use: macOS Clang 8'

  pool:
    vmImage: macOS-10.13

  variables:
    # @@@ rename variables
    # CXXTRACE_IWYUDIRECTORY
    cxxtrace.IWYUDirectory: $(System.DefaultWorkingDirectory)/include-what-you-use-prefix
    # CXXTRACE_IWYUSOURCEDIRECTORY
    cxxtrace.IWYUSourceDirectory: $(System.DefaultWorkingDirectory)/include-what-you-use
    # CXXTRACE_IWYUBUILDDIRECTORY
    cxxtrace.IWYUBuildDirectory: $(System.DefaultWorkingDirectory)/build
  # @@@ dedupe with build-and-test.yaml
    # CXXTRACE_TOOLCHAINDIRECTORY
    cxxtrace.ToolchainDirectory: $(System.DefaultWorkingDirectory)/toolchain
    # CXXTRACE_TOOLCHAINNAME
    cxxtrace.ToolchainName: clang+llvm-8.0.0-x86_64-apple-darwin
    # CXXTRACE_TOOLCHAINARCHIVENAME
    cxxtrace.ToolchainArchiveName: clang+llvm-8.0.0-x86_64-apple-darwin.tar.xz
    cxxtrace.ToolchainPrettyName: Clang 8.0.0
    # CXXTRACE_IWYUARCHIVENAME
    cxxtrace.IWYUArchiveName: include-what-you-use-0.12-clang-8-macos.tar.gz

  steps:
  - checkout: none

  - script: |
     set -eux
     mkdir -p -- \
       "${CXXTRACE_IWYUBUILDDIRECTORY}" \
       "${CXXTRACE_TOOLCHAINDIRECTORY}"
    displayName: Configure checkout

  # @@@ dedupe with build-and-test.yaml
  - task: DownloadPipelineArtifact@2
    displayName: Download $(cxxtrace.ToolchainPrettyName)
    inputs:
      buildType: specific
      project: $(System.TeamProjectId)
      definition: 7 # cache-public-packages.yaml
      buildVersionToDownload: latest
      artifactName: $(cxxtrace.ToolchainArchiveName)
      targetPath: $(cxxtrace.ToolchainDirectory)
    timeoutInMinutes: 120

  # @@@ dedupe with build-and-test.yaml
  - script: |
     set -eux
     ls -laR
     tar xf "${CXXTRACE_TOOLCHAINARCHIVENAME}"
     ln -s -- "${CXXTRACE_TOOLCHAINNAME}" usr
    displayName: Install $(cxxtrace.ToolchainPrettyName)
    workingDirectory: $(cxxtrace.ToolchainDirectory)
    timeoutInMinutes: 60

  # @@@ make a proper mirror
  - script: |
     set -eux
     if [ -e "${CXXTRACE_IWYUSOURCEDIRECTORY}" ]; then
       printf 'error: %s should not exist\n' "${CXXTRACE_IWYUSOURCEDIRECTORY}" >&2
       exit 1
     fi
     curl --output include-what-you-use-0.12.src.tar.gz 'https://include-what-you-use.org/downloads/include-what-you-use-0.12.src.tar.gz'
     tar xvzf include-what-you-use-0.12.src.tar.gz
     if ! [ include-what-you-use -ef "${CXXTRACE_IWYUSOURCEDIRECTORY}" ]; then
       mv include-what-you-use "${CXXTRACE_IWYUSOURCEDIRECTORY}"
     fi
    displayName: Download include-what-you-use
    workingDirectory: $(System.DefaultWorkingDirectory)
    timeoutInMinutes: 60

  - script: |
     set -eux
     cxxtrace_toolchain_usr="${CXXTRACE_TOOLCHAINDIRECTORY}/usr"
     PATH="${cxxtrace_toolchain_usr}/bin:${PATH}"
     cflags="-D_LIBCPP_DISABLE_AVAILABILITY"
     ldflags="-L${cxxtrace_toolchain_usr}/lib ${cxxtrace_toolchain_usr}/lib/libc++.a ${cxxtrace_toolchain_usr}/lib/libc++abi.a"
     cmake \
       -G 'Unix Makefiles' \
       -DBUILD_TESTING=ON \
       -DCMAKE_BUILD_TYPE=Debug \
       -DCMAKE_C_COMPILER=clang \
       -DCMAKE_CXX_COMPILER=clang++ \
       -DCMAKE_C_FLAGS="${cflags}" \
       -DCMAKE_CXX_FLAGS="${cflags}" \
       -DCMAKE_EXE_LINKER_FLAGS="${ldflags}" \
       -DCMAKE_SHARED_LINKER_FLAGS="${ldflags}" \
       -DCMAKE_INSTALL_PREFIX="${CXXTRACE_IWYUDIRECTORY}" \
       -DCMAKE_PREFIX_PATH="${CXXTRACE_TOOLCHAINDIRECTORY}" \
       "${CXXTRACE_IWYUSOURCEDIRECTORY}"
    displayName: Configure include-what-you-use
    workingDirectory: $(cxxtrace.IWYUBuildDirectory)
    timeoutInMinutes: 180

  - script: |
     set -eux
     cmake --build . -- -j4
     cmake --build . -- install
     # TODO(strager): Strip LC_RPATH from executables.
    displayName: Build include-what-you-use
    workingDirectory: $(cxxtrace.IWYUBuildDirectory)

  - script: |
     set -eux
     mv "${CXXTRACE_IWYUDIRECTORY}" "${CXXTRACE_IWYUNAME}"
     tar czf "${CXXTRACE_IWYUARCHIVENAME}" "${CXXTRACE_IWYUNAME}"
    displayName: Package include-what-you-use
    workingDirectory: $(System.DefaultWorkingDirectory)

  - task: PublishPipelineArtifact@1
    displayName: Publish artifacts
    inputs:
      artifact: $(cxxtrace.IWYUArchiveName)
      targetPath: $(System.DefaultWorkingDirectory)/$(cxxtrace.IWYUArchiveName)

# @@@ Linux plz
